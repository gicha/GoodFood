import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes
// ignore_for_file: unnecessary_brace_in_string_interps

//WARNING: This file is automatically generated. DO NOT EDIT, all your changes would be lost.

typedef LocaleChangeCallback = void Function(Locale locale);

class I18n implements WidgetsLocalizations {
  const I18n();
  static Locale _locale;
  static bool _shouldReload = false;

  static set locale(Locale _newLocale) {
    _shouldReload = true;
    I18n._locale = _newLocale;
  }

  static const GeneratedLocalizationsDelegate delegate = GeneratedLocalizationsDelegate();

  /// function to be invoked when changing the language
  static LocaleChangeCallback onLocaleChanged;

  static I18n of(BuildContext context) =>
    Localizations.of<I18n>(context, WidgetsLocalizations);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  /// "Wait please, loading..."
  String get loading => "Wait please, loading...";
  /// "GoodFood"
  String get title => "GoodFood";
  /// "Title is undefined"
  String get noTitle => "Title is undefined";
  /// "Description is undefined"
  String get noDesc => "Description is undefined";
  /// "Location is undefined"
  String get noLocation => "Location is undefined";
  /// "Wait a few seconds, we're trying to get your location"
  String get findLocation => "Wait a few seconds, we're trying to get your location";
  /// "Turn on the location. This way an app will work best"
  String get needLocation => "Turn on the location. This way an app will work best";
  /// "Confirm"
  String get confirm => "Confirm";
  /// "Cancel"
  String get cancel => "Cancel";
  /// "Построить ближайший маршрут через контейнер?"
  String get toNearestStore => "Построить ближайший маршрут через контейнер?";
  /// "Wrong email or password"
  String get wrongLoginOrPassword => "Wrong email or password";
  /// "History"
  String get history => "History";
  /// "Email"
  String get mail => "Email";
  /// "Password"
  String get password => "Password";
  /// "Re-enter the password"
  String get rePassword => "Re-enter the password";
  /// "Passwords don't match"
  String get passwordDoesntMatch => "Passwords don't match";
  /// "Name"
  String get name => "Name";
  /// "Surname"
  String get surname => "Surname";
  /// "Login"
  String get entry => "Login";
  /// "Register"
  String get registration => "Register";
  /// "Read the QR"
  String get readQR => "Read the QR";
  /// "Feedback"
  String get feedback => "Feedback";
  /// "Don't have an account? "
  String get notHaveAccount => "Don't have an account? ";
  /// "Already have an account?"
  String get haveAccount => "Already have an account?";
  /// "Entrance with login"
  String get entranceWithLogin => "Entrance with login";
  /// "No connection to the Internet"
  String get networkError => "No connection to the Internet";
  /// "Send"
  String get send => "Send";
  /// "Filter"
  String get filter => "Filter";
  /// "Describe your problem"
  String get describeYourProblem => "Describe your problem";
  /// "Report a problem"
  String get reportProblem => "Report a problem";
  /// "close"
  String get close => "close";
  /// "from you"
  String get fromYou => "from you";
  /// "m"
  String get metres => "m";
  /// "km"
  String get kilometres => "km";
  /// "Orders"
  String get orders => "Orders";
  /// "Seems your cart\nis empty\n:("
  String get withoutOrders => "Seems your cart\nis empty\n:(";
  /// "Wishlist"
  String get wishlist => "Wishlist";
  /// "Nothing is added\nto your wishlist yet\n:("
  String get withoutWishes => "Nothing is added\nto your wishlist yet\n:(";
  /// "Delete"
  String get delete => "Delete";
  /// "save"
  String get save => "save";
  /// "Leave unsaved?"
  String get leaveWithoutSave => "Leave unsaved?";
  /// "Here you can add\n your wishlist\n:)"
  String get addWish => "Here you can add\n your wishlist\n:)";
  /// "Product Name"
  String get productName => "Product Name";
  /// "Input your wish here"
  String get inputWishHere => "Input your wish here";
  /// "Amount"
  String get amount => "Amount";
  /// "Input number"
  String get inputNumber => "Input number";
}

class _I18n_ru_RU extends I18n {
  const _I18n_ru_RU();

  /// "Подождите, идёт загрузка..."
  @override
  String get loading => "Подождите, идёт загрузка...";
  /// "Goodfood"
  @override
  String get title => "Goodfood";
  /// "Название отсутствует"
  @override
  String get noTitle => "Название отсутствует";
  /// "Описание отсутствует"
  @override
  String get noDesc => "Описание отсутствует";
  /// "Местоположение не установлено"
  @override
  String get noLocation => "Местоположение не установлено";
  /// "Подождите, мы определяем ваше местоположение"
  @override
  String get findLocation => "Подождите, мы определяем ваше местоположение";
  /// "Для корректной работы, приложению нужен доступ к вашей геопозиции"
  @override
  String get needLocation => "Для корректной работы, приложению нужен доступ к вашей геопозиции";
  /// "Подтвердить"
  @override
  String get confirm => "Подтвердить";
  /// "Отменить"
  @override
  String get cancel => "Отменить";
  /// "Построить ближайший маршрут через контейнер?"
  @override
  String get toNearestStore => "Построить ближайший маршрут через контейнер?";
  /// "Неправильный email или пароль"
  @override
  String get wrongLoginOrPassword => "Неправильный email или пароль";
  /// "История"
  @override
  String get history => "История";
  /// "Email"
  @override
  String get mail => "Email";
  /// "Пароль"
  @override
  String get password => "Пароль";
  /// "Повторите пароль"
  @override
  String get rePassword => "Повторите пароль";
  /// "Пароли не совпадают"
  @override
  String get passwordDoesntMatch => "Пароли не совпадают";
  /// "Имя"
  @override
  String get name => "Имя";
  /// "Фамилия"
  @override
  String get surname => "Фамилия";
  /// "Войти"
  @override
  String get entry => "Войти";
  /// "Регистрация"
  @override
  String get registration => "Регистрация";
  /// "Считать QR"
  @override
  String get readQR => "Считать QR";
  /// "Обратная связь"
  @override
  String get feedback => "Обратная связь";
  /// "Нет аккаунта? "
  @override
  String get notHaveAccount => "Нет аккаунта? ";
  /// "Есть аккаунт? "
  @override
  String get haveAccount => "Есть аккаунт? ";
  /// "Вход по логину"
  @override
  String get entranceWithLogin => "Вход по логину";
  /// "Отсутствует подключение к интернету. Проверьте соединение"
  @override
  String get networkError => "Отсутствует подключение к интернету. Проверьте соединение";
  /// "Отправить"
  @override
  String get send => "Отправить";
  /// "Фильтр"
  @override
  String get filter => "Фильтр";
  /// "Опишите вашу проблему"
  @override
  String get describeYourProblem => "Опишите вашу проблему";
  /// "Сообщить о проблеме"
  @override
  String get reportProblem => "Сообщить о проблеме";
  /// "закрыть"
  @override
  String get close => "закрыть";
  /// "от вас"
  @override
  String get fromYou => "от вас";
  /// "м"
  @override
  String get metres => "м";
  /// "км"
  @override
  String get kilometres => "км";
  /// "Заказы"
  @override
  String get orders => "Заказы";
  /// "Заказов пока нет"
  @override
  String get withoutOrders => "Заказов пока нет";
  /// "Список пожеланий"
  @override
  String get wishlist => "Список пожеланий";
  /// "Пока что ваш\nсписок пуст\n:("
  @override
  String get withoutWishes => "Пока что ваш\nсписок пуст\n:(";
  /// "Удалить"
  @override
  String get delete => "Удалить";
  /// "сохранить"
  @override
  String get save => "сохранить";
  /// "Вернуться без сохранения изменений?"
  @override
  String get leaveWithoutSave => "Вернуться без сохранения изменений?";
  /// "Здесь вы можете заполнить\nсвой список желаний\n:)"
  @override
  String get addWish => "Здесь вы можете заполнить\nсвой список желаний\n:)";
  /// "Product Name"
  @override
  String get productName => "Product Name";
  /// "Input your wish here"
  @override
  String get inputWishHere => "Input your wish here";
  /// "Amount"
  @override
  String get amount => "Amount";
  /// "Input number"
  @override
  String get inputNumber => "Input number";

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class _I18n_en_US extends I18n {
  const _I18n_en_US();

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class _I18n_hu_HU extends I18n {
  const _I18n_hu_HU();

  /// " Várjon, kérem, betöltés..."
  @override
  String get loading => " Várjon, kérem, betöltés...";
  /// "GoodFood"
  @override
  String get title => "GoodFood";
  /// "A cím nincs meghatározva"
  @override
  String get noTitle => "A cím nincs meghatározva";
  /// "A leírás nincs meghatározva"
  @override
  String get noDesc => "A leírás nincs meghatározva";
  /// "A hely nincs meghatározva"
  @override
  String get noLocation => "A hely nincs meghatározva";
  /// "Várjon néhány másodpercet, megpróbáljuk megtudni a helyét"
  @override
  String get findLocation => "Várjon néhány másodpercet, megpróbáljuk megtudni a helyét";
  /// "Kapcsolja be a helyet. Ily módon egy alkalmazás jobban működik"
  @override
  String get needLocation => "Kapcsolja be a helyet. Ily módon egy alkalmazás jobban működik";
  /// "megerősít"
  @override
  String get confirm => "megerősít";
  /// "megszünteti"
  @override
  String get cancel => "megszünteti";
  /// "Построить ближайший маршрут через контейнер?"
  @override
  String get toNearestStore => "Построить ближайший маршрут через контейнер?";
  /// "Hibás e-mail vagy jelszó"
  @override
  String get wrongLoginOrPassword => "Hibás e-mail vagy jelszó";
  /// "történelem"
  @override
  String get history => "történelem";
  /// "email"
  @override
  String get mail => "email";
  /// "jelszó"
  @override
  String get password => "jelszó";
  /// "Írja be újra a jelszót"
  @override
  String get rePassword => "Írja be újra a jelszót";
  /// "A jelszavak nem egyeznek"
  @override
  String get passwordDoesntMatch => "A jelszavak nem egyeznek";
  /// "Név"
  @override
  String get name => "Név";
  /// "Vezetéknév"
  @override
  String get surname => "Vezetéknév";
  /// "Belépés"
  @override
  String get entry => "Belépés";
  /// "Regisztráció"
  @override
  String get registration => "Regisztráció";
  /// "Olvassa el a QR-et"
  @override
  String get readQR => "Olvassa el a QR-et";
  /// "Visszacsatolás"
  @override
  String get feedback => "Visszacsatolás";
  /// "Nincs fiókod?"
  @override
  String get notHaveAccount => "Nincs fiókod?";
  /// "Már van fiókja?"
  @override
  String get haveAccount => "Már van fiókja?";
  /// "Bejárat belépéssel"
  @override
  String get entranceWithLogin => "Bejárat belépéssel";
  /// "Nincs kapcsolat az internettel"
  @override
  String get networkError => "Nincs kapcsolat az internettel";
  /// "Küld"
  @override
  String get send => "Küld";
  /// "Szűrő"
  @override
  String get filter => "Szűrő";
  /// "Írja le a problémáját"
  @override
  String get describeYourProblem => "Írja le a problémáját";
  /// "Jelentem a problémát"
  @override
  String get reportProblem => "Jelentem a problémát";
  /// "bezárás"
  @override
  String get close => "bezárás";
  /// "tőled"
  @override
  String get fromYou => "tőled";
  /// "m"
  @override
  String get metres => "m";
  /// "km"
  @override
  String get kilometres => "km";
  /// "rendelés"
  @override
  String get orders => "rendelés";
  /// "Úgy tűnik, a bevásárló \nkosár üres\n:("
  @override
  String get withoutOrders => "Úgy tűnik, a bevásárló \nkosár üres\n:(";
  /// "Kívánság lista"
  @override
  String get wishlist => "Kívánság lista";
  /// "A kívánságlistához még\nnem adunk semmit\n:("
  @override
  String get withoutWishes => "A kívánságlistához még\nnem adunk semmit\n:(";
  /// "Töröl"
  @override
  String get delete => "Töröl";
  /// "mentés"
  @override
  String get save => "mentés";
  /// "Ha nem menti?"
  @override
  String get leaveWithoutSave => "Ha nem menti?";
  /// "Itt felveheti \n kívánságlistáját\n:)"
  @override
  String get addWish => "Itt felveheti \n kívánságlistáját\n:)";
  /// "termék név"
  @override
  String get productName => "termék név";
  /// "Írja ide kívánságát"
  @override
  String get inputWishHere => "Írja ide kívánságát";
  /// "Összeg"
  @override
  String get amount => "Összeg";
  /// "Írja ide a számot"
  @override
  String get inputNumber => "Írja ide a számot";

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();
  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("ru", "RU"),
      Locale("en", "US"),
      Locale("hu", "HU")
    ];
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      if (isSupported(locale)) {
        return locale;
      }
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    I18n._locale ??= locale;
    I18n._shouldReload = false;
    final String lang = I18n._locale != null ? locale.toString() : "";
    final String languageCode = I18n._locale != null ? locale.languageCode : "";
    if ("ru_RU" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_ru_RU());
    }
    else if ("en_US" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
    }
    else if ("hu_HU" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_hu_HU());
    }
    else if ("ru" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_ru_RU());
    }
    else if ("en" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
    }
    else if ("hu" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_hu_HU());
    }

    return SynchronousFuture<WidgetsLocalizations>(const I18n());
  }

  @override
  bool isSupported(Locale locale) {
    for (var i = 0; i < supportedLocales.length && locale != null; i++) {
      final l = supportedLocales[i];
      if (l.languageCode == locale.languageCode) {
        return true;
      }
    }
    return false;
  }

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => I18n._shouldReload;
}